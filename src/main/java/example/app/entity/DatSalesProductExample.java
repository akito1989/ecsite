package example.app.entity;

import java.util.ArrayList;
import java.util.List;

public class DatSalesProductExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public DatSalesProductExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeSalesIsNull() {
            addCriterion("code_sales is null");
            return (Criteria) this;
        }

        public Criteria andCodeSalesIsNotNull() {
            addCriterion("code_sales is not null");
            return (Criteria) this;
        }

        public Criteria andCodeSalesEqualTo(Integer value) {
            addCriterion("code_sales =", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesNotEqualTo(Integer value) {
            addCriterion("code_sales <>", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesGreaterThan(Integer value) {
            addCriterion("code_sales >", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesGreaterThanOrEqualTo(Integer value) {
            addCriterion("code_sales >=", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesLessThan(Integer value) {
            addCriterion("code_sales <", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesLessThanOrEqualTo(Integer value) {
            addCriterion("code_sales <=", value, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesIn(List<Integer> values) {
            addCriterion("code_sales in", values, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesNotIn(List<Integer> values) {
            addCriterion("code_sales not in", values, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesBetween(Integer value1, Integer value2) {
            addCriterion("code_sales between", value1, value2, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeSalesNotBetween(Integer value1, Integer value2) {
            addCriterion("code_sales not between", value1, value2, "codeSales");
            return (Criteria) this;
        }

        public Criteria andCodeProductIsNull() {
            addCriterion("code_product is null");
            return (Criteria) this;
        }

        public Criteria andCodeProductIsNotNull() {
            addCriterion("code_product is not null");
            return (Criteria) this;
        }

        public Criteria andCodeProductEqualTo(Integer value) {
            addCriterion("code_product =", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductNotEqualTo(Integer value) {
            addCriterion("code_product <>", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductGreaterThan(Integer value) {
            addCriterion("code_product >", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductGreaterThanOrEqualTo(Integer value) {
            addCriterion("code_product >=", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductLessThan(Integer value) {
            addCriterion("code_product <", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductLessThanOrEqualTo(Integer value) {
            addCriterion("code_product <=", value, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductIn(List<Integer> values) {
            addCriterion("code_product in", values, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductNotIn(List<Integer> values) {
            addCriterion("code_product not in", values, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductBetween(Integer value1, Integer value2) {
            addCriterion("code_product between", value1, value2, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andCodeProductNotBetween(Integer value1, Integer value2) {
            addCriterion("code_product not between", value1, value2, "codeProduct");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Integer value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Integer value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Integer value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Integer value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Integer value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Integer> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Integer> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Integer value1, Integer value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("quantity is null");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("quantity is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityEqualTo(Integer value) {
            addCriterion("quantity =", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotEqualTo(Integer value) {
            addCriterion("quantity <>", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThan(Integer value) {
            addCriterion("quantity >", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("quantity >=", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityLessThan(Integer value) {
            addCriterion("quantity <", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("quantity <=", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityIn(List<Integer> values) {
            addCriterion("quantity in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotIn(List<Integer> values) {
            addCriterion("quantity not in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityBetween(Integer value1, Integer value2) {
            addCriterion("quantity between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("quantity not between", value1, value2, "quantity");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dat_sales_product
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 25 02:24:53 AEDT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dat_sales_product
     *
     * @mbggenerated Sun Mar 25 02:24:53 AEDT 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}